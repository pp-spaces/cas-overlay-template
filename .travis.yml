language: java
sudo: required
dist: trusty
services:
  - docker
branches:
  only:
    - master
before_cache:
  - rm -rf $HOME/.gradle/caches/5.*/
  - rm -rf $HOME/.gradle/caches/4.*/
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
  - find ~/.gradle/caches/ -name "*.lock" -type f -delete
cache:
  bundler: false
  cargo: false
  directories:
    - $HOME/.m2
    - $HOME/.npm/
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
env:
  global:
    - JAVA_OPTS="-Xms512m -Xmx4048m -Xss128m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -Xverify:none -server"
    - GRADLE_OPTS="-Xms512m -Xmx1024m -Xss128m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -Xverify:none -server"
jdk:
  - openjdk11
before_install:
  - echo -e "Configuring Gradle wrapper...\n"
  - mkdir -p ~/.gradle && echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties
  - chmod -R 777 ./gradlew
  - chmod -R 777 *.sh
install: true
stages:
  - build
  - validate
  - docker
jobs:
  include:
    - stage: build
      name: "Build CAS"
      script: ./gradlew clean build --stacktrace --no-daemon --refresh-dependencies -Dorg.gradle.internal.http.socketTimeout=600000 -Dorg.gradle.internal.http.connectionTimeout=600000
      ############################################
    - stage: validate
      name: "Download CAS Shell"
      script: ./gradlew downloadShell
    - stage: validate
      name: "List CAS Template Views"
      script: ./gradlew listTemplateViews
    - stage: validate
      name: "Unzip CAS Web Application"
      script: ./gradlew explodeWar
      ############################################
    - stage: docker
      name: "Build Docker Image via Jib"
      script: ./gradlew build jibDockerBuild --stacktrace --no-daemon --refresh-dependencies
    - stage: docker
      name: "Build Docker Image via Docker Compose"
      script: docker-compose build
    - stage: docker
      name: "Build & Push Docker Image"
      script:
        - ./docker-build.sh
        - docker images
        - ./docker-push.sh
    ############################################
    # - stage: docker
    #   name: "Upload Docker Image"
    #   script: ./docker-push.sh
